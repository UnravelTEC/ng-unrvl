# 6 to 7

according to https://update.angular.io/

https://update.angular.io/#6.0:7.0

(did not do anything:
root@:  npm install -g rxjs-tslint
  npm install -g "tslint@^5.0.0"
  npm install -g "typescript@>=2.1.0"
rxjs-5-to-6-migrate -p src/tsconfig.app.json
)

ng update @angular/cli@7

maybe downgrade before:
  npm i @angular/animations@6.1.9

ng update @angular/common@7


# 7 to 8

https://update.angular.io/#7.2:8.0l2

ng update @angular/cli@8 @angular/core@8

Error: codelyzer blocks installation
  in package.json, replace ~ with ^ for it
  npm install codelyzer
ng update @angular/cli@8 @angular/core@8

ng update @angular/cdk@8
  The Angular CLI requires a minimum Node.js version of either v10.13 or v12.0.

according to https://linuxize.com/post/how-to-install-node-js-on-debian-10/
  curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
  ati nodejs
  npm install -g npm

npm install ng2-charts@latest

# 9.1 to 10

ati nodejs=18.19.0+dfsg-6
ati npm

repository muss clean sein
npx @angular/cli@10 update @angular/core@10 @angular/cli@10
  ERROR: The "@angular-devkit/schematics" package cannot be resolved from the workspace root directory. ...
npm install @angular-devkit/schematics --legacy-peer-deps
git add package-lock.json package.json
gm "make repo clean before ngx"
npx @angular/cli@10 update @angular/core@10 @angular/cli@10
 ERROR on build: opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ]
  ... continue anyway, as we have npm from testing, and rest from debian stable

npx @angular/cli@10 update @angular/material@10
-OK

# 10 to 11

fix version conflicts in package.json
er setzte @angular-devkit/build-angular immer auf 0.11 zurÃ¼ck. dagegen half rm -rf node_modules

next try: completely rm package-lock.json package.json
npm i  @angular/core@10 @angular/cli@10
npm install @angular-devkit/build-angular
alte deps von alter package.json rein, nur mal das ng zeug, nicht unsere extrasachen wie dyg oder so

ng update @angular/core@11 @angular/cli@11
ng update @angular/material@11

# 11 to 12

Dependency prob -> del package-lock.json

ng update @angular/core@12 @angular/cli@12 --force
ng update @angular/material@12

# 12 to 13

ng update @angular/core@13 @angular/cli@13
npm i
ev. tm package-lock.json
ng update @angular/material@13

# 13 to 14

ng update @angular/core@14 @angular/cli@14
ng update @angular/material@14

# 14 to 15

ng update @angular/core@15 @angular/cli@15
ng update @angular/material@15
- migriert alle und andere { MatLegacySelectModule as MatSelectModule } from '@angular/material/legacy-select';
